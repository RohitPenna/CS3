#BlueJ class context
comment0.target=MelodyMainGUI
comment0.text=\n\ A\ GUI\ for\ the\ MelodyMaker\ project\ (was\ previously\ console-based)\n\n\ @author\ Andrew\ Sen,\ Liberty\ student\ 2019\n\n\ parts\ of\ GUI\ code\ borrowed\ from\ the\ MazeSolver\ project\n\ very\ minor\ modificaitons\ by\ Mr.\ Bunn\n
comment1.params=
comment1.target=MelodyMainGUI()
comment10.params=
comment10.target=void\ changeTempo()
comment10.text=changes\ tempo\ according\ to\ user\ input
comment11.params=
comment11.target=void\ doReverse()
comment11.text=reverses\ the\ melody\ with\ call\ to\ melody.reverse()
comment12.params=
comment12.target=void\ appendSong()
comment12.text=allows\ user\ to\ pick\ a\ melody\ to\ append
comment13.params=f
comment13.target=boolean\ accept(java.io.File)
comment14.params=
comment14.target=java.lang.String\ getDescription()
comment15.params=
comment15.target=void\ printSong()
comment15.text=prints\ the\ melody
comment16.params=
comment16.target=java.lang.String\ melodyString()
comment16.text=returns\ a\ string\ of\ the\ melody
comment17.params=
comment17.target=void\ doSave()
comment17.text=allows\ user\ to\ save\ the\ current\ melody,\ including\ all\ changes\ applied\ to\ it
comment18.params=
comment18.target=void\ doClear()
comment18.text=clears\ the\ display\ of\ all\ text
comment19.params=
comment19.target=void\ reset()
comment19.text=\n\ Set\ everything\ back\ to\ the\ ready\ state.\ \ Called\ by\ the\ "reset"\ button\n
comment2.params=
comment2.target=void\ setInitialButtonEnabledState()
comment2.text=set\ the\ enabled/disabled\ properties\ of\ all\ the\ buttons\ upon\ load
comment20.params=
comment20.target=void\ loadFile()
comment20.text=allows\ user\ to\ pick\ a\ file\ to\ load
comment21.params=f
comment21.target=boolean\ accept(java.io.File)
comment22.params=
comment22.target=java.lang.String\ getDescription()
comment23.params=file
comment23.target=void\ loadFile(java.io.File)
comment23.text=\n\ load\ the\ provided\ file\n\ used\ by\ save()\ to\ load\ the\ file\ that\ was\ just\ saved\n
comment24.params=input
comment24.target=java.util.Queue\ read(java.util.Scanner)
comment24.text=\n\ returns\ a\ Queue\ filled\ with\ the\ notes\ specified\ in\ the\ passed\ in\n\ Scanner.\ The\ notes\ will\ appear\ in\ the\ same\ order\ in\ the\ Queue\n\ as\ they\ did\ in\ the\ file.\n
comment25.params=other
comment25.target=Melody\ copyMelody(Melody)
comment25.text=\n\ returns\ a\ copy\ of\ the\ given\ melody\ with\ a\ new\ Queue,\n\ containing\ references\ to\ the\ same\ Notes\n\ used\ to\ create\ a\ copy\ of\ melody\ stored\ in\ melodyCopy\n
comment26.params=args
comment26.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ addButtonListeners()
comment3.text=register\ the\ button\ listeners
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.text=\n\ Collection\ of\ handlers\ to\ deal\ with\ GUI\ events.\n\n\ (non-Javadoc)\n\ @see\ java.awt.event.ActionListener\#actionPerformed(java.awt.event.ActionEvent)\n
comment5.params=
comment5.target=void\ doPlay()
comment5.text=\n\ \ plays\ the\ melody\n\ \ initializes\ a\ separate\ thread\ to\ contain\ the\ actual\ playing\ process\n
comment6.params=
comment6.target=void\ run()
comment7.params=
comment7.target=void\ doPause()
comment8.params=
comment8.target=void\ doResume()
comment9.params=
comment9.target=void\ doStop()
numComments=27
